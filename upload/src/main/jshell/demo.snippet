import io.fabric8.kubernetes.api.model.ObjectMeta;
import io.fabric8.kubernetes.api.model.Pod;
import io.fabric8.kubernetes.api.model.PodBuilder;
import io.fabric8.kubernetes.client.KubernetesClientBuilder;
import io.fabric8.openshift.client.OpenShiftClient;

import java.nio.file.Path;
import java.util.Collections;

    OpenShiftClient oc = new KubernetesClientBuilder().build().adapt(OpenShiftClient.class);
void listPods() {
    oc.pods().list().getItems().stream()
        .map(Pod::getMetadata)
        .map(ObjectMeta::getName)
        .forEach(System.out::println);
}
void createBusyBox() {
    oc.pods().resource(
          new PodBuilder().withNewSpec()
            .addNewContainer()
              .withImage("busybox")
              .withName("busybox")
              .withCommand(Collections.singletonList("top"))
            .endContainer()
          .endSpec()
          .withNewMetadata()
            .withName("busybox")
          .endMetadata()
        .build()).create();
}
void deleteBusyBox() {
    oc.pods().withName("busybox").delete();
}

listPods();
createBusyBox();

oc.pods().withName("busybox")
    .file("/tmp/uploaded-example.txt")
    .upload(Path.of("D:\\00-MN\\projects\\marcnuri-demo\\kubernetes-client\\upload\\src\\test\\resources\\sample-upload-file.txt"));

oc.pods().withName("busybox").writingOutput(System.out).exec("sh", "-c", "du -ha /tmp");

deleteBusyBox();







